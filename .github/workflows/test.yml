name: Tests
run-name: Tests

on:
  workflow_call:
    inputs:
      node-version:
        description: "Node.js version to use"
        required: true
        type: string

jobs:
  unit-test:
    name: Run Unit Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs['node-version'] }}

      - name: Install Dependencies
        run: npm ci

      - name: Install React 18.3.1
        run: |
          npm uninstall react react-dom
          npm install react@18.3.1 react-dom@18.3.1

      - name: Start App
        run: |
          npm run start &

      - name: Run Unit Tests
        run: npm run unit:test

  integration-test:
    needs: unit-test
    name: Run Integration Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs['node-version'] }}

      - name: Install Dependencies
        run: npm ci

      - name: Install React 18.3.1
        run: |
          npm uninstall react react-dom
          npm install react@18.3.1 react-dom@18.3.1

      - name: Start App
        run: |
          npm run start &

      - name: Run Integration Tests
        run: npm run int:test

  package-library:
    needs: integration-test
    name: Package Library
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs['node-version'] }}

      - name: Install Dependencies
        run: npm ci

      - name: Build Project
        run: npm run build --if-present

      - name: Package Library
        id: package
        run: |
          npm pack
          echo "PACKAGE_NAME=$(ls *.tgz)" >> $GITHUB_ENV

      - name: Upload Package
        uses: actions/upload-artifact@v4
        with:
          name: react-chatbotify-package
          path: ${{ env.PACKAGE_NAME }}
          retention-days: 1 

  compatibility-test:
    needs: package-library
    name: Run Compatibility Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        react-version: ["16.14.0", "17.0.2", "18.3.1", "rc"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs['node-version'] }}

      - name: Install Dependencies
        run: npm ci

      - name: Download Packaged Library
        uses: actions/download-artifact@v4
        with:
          name: react-chatbotify-package

      - name: Create Test Project
        run: |
          npx create-vite@latest test-project --template react-ts

      - name: Copy Template File
        run: |
          cp ./cypress/fixtures/templates/ChatBotApp.tsx ./test-project/src/App.tsx
          if [[ "${{ matrix.react-version }}" =~ ^(18|rc) ]]; then
            cp ./src/devIndex.tsx ./test-project/src/main.tsx
          else
            cp ./cypress/fixtures/templates/pre_react_18/index.tsx ./test-project/src/main.tsx
          fi

      - name: Install Dependencies in Test Project
        run: |
          cd ./test-project
          npm install
          npm install -g vite

      - name: Install Specific React Version in Test Project
        run: |
          cd ./test-project
          npm uninstall react react-dom
          npm install react@${{ matrix.react-version }} react-dom@${{ matrix.react-version }}

      - name: Install React ChatBotify (.tgz) into Test Project
        run: |
          cd ./test-project
          npm install ../*.tgz

      - name: Start App
        run: |
          cd ./test-project
          vite --port 3000 &

      - name: Run Library Tests
        run: |
          npm run int:test